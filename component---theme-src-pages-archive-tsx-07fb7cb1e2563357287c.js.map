{"version":3,"sources":["webpack:///../theme/src/components/subheader/index.tsx","webpack:///../theme/src/pages/archive.tsx","webpack:///../theme/src/components/card/style.tsx","webpack:///../theme/src/components/card/index.tsx","webpack:///../theme/src/components/post-grid/index.tsx"],"names":["StyledSubheader","styled","div","props","backgroundColor","textColor","SubheaderTitle","h1","SubheaderSubtitle","small","Subheader","title","subtitle","ArchivePage","data","location","posts","allPosts","edges","map","node","bigHeader","type","length","StyledCard","Link","StyledArticle","article","Theme","breakpoints","sm","FeaturedImage","Img","halfImage","CardContent","section","compact","CardMeta","CardTitle","h2","Card","meta","path","featuredImage","content","style","children","to","fixed","sizes","tag","time","dateTime","timePretty","id","className","data-flag-title","FireOutlined","marginRight","dangerouslySetInnerHTML","__html","visitor","display","PostGrid","post","index","frontmatter","childImageSharp","excerpt","key","created","createdPretty","tags"],"mappings":"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","file":"component---theme-src-pages-archive-tsx-07fb7cb1e2563357287c.js","sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport {graphql} from \"gatsby\";\nimport {Post} from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface ArchivePageProps {\n  data: {\n    allPosts: {\n      edges: Array<{ node: Post }>;\n    };\n  };\n  location: Location;\n}\n\nconst ArchivePage: FunctionComponent<ArchivePageProps> = ({data, location}) => {\n  const posts = data.allPosts.edges.map(node => node.node) as Post[];\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO\n        location={location}\n        title={`Archive`}\n        type={`Series`}\n      />\n      <Subheader title={`Archive`} subtitle={`${posts.length} posts`}/>\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default ArchivePage;\n\nexport const query = graphql`\n  query {\n    allPosts: allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\\\\\.md$/\" } }\n        sort: { fields: frontmatter___created, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              path\n              tags\n              excerpt\n              created\n              createdPretty: created(formatString: \"DD MMMM, YYYY\")\n              featuredImage {\n                childImageSharp {\n                  sizes(maxWidth: 500, quality: 100) {\n                    base64\n                    aspectRatio\n                    src\n                    srcSet\n                    sizes\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\n","import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, { CSSProperties, FunctionComponent, ReactNode } from \"react\"\nimport {\n  CardContent,\n  CardMeta,\n  CardTitle,\n  FeaturedImage,\n  StyledArticle,\n  StyledCard,\n} from \"./style\"\nimport Valine from \"gatsby-plugin-valine\"\nimport { FireOutlined } from \"@ant-design/icons\"\n\nexport interface CardProps {\n  title?: string\n  path: string\n  featuredImage?: any\n  content?: string\n  meta?: {\n    time: string\n    timePretty: string\n    tag: string | null\n  }\n  halfImage?: boolean\n  compact?: boolean\n  style?: CSSProperties\n  children?: ReactNode\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  title,\n  meta,\n  path,\n  featuredImage,\n  content,\n  halfImage = false,\n  compact = false,\n  style,\n  children,\n}) => {\n  return (\n    <StyledArticle style={style}>\n      <StyledCard to={path}>\n        {/* TODO: Oh boy... */}\n        {featuredImage && featuredImage.fixed && (\n          <FeaturedImage sizes={featuredImage.fixed} halfImage={halfImage} />\n        )}\n        {featuredImage && featuredImage.sizes && (\n          <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage} />\n        )}\n        <CardContent compact={compact}>\n          {children}\n          <header>\n            {meta && (\n              <CardMeta>\n                {meta.tag && <>{meta.tag}</>}\n                {meta.time && (\n                  <time dateTime={meta.time}>{meta.timePretty}</time>\n                )}\n                <span\n                  id={path}\n                  className=\"leancloud_visitors\"\n                  data-flag-title={title}\n                >\n                  <FireOutlined style={{ marginRight: 8 }} />\n                  <i className=\"leancloud-visitors-count\"></i>\n                </span>\n              </CardMeta>\n            )}\n            {title && <CardTitle>{title}</CardTitle>}\n          </header>\n          {content && <p dangerouslySetInnerHTML={{ __html: content }} />}\n          <Valine visitor={true} style={{ display: \"none\" }}></Valine>\n        </CardContent>\n      </StyledCard>\n    </StyledArticle>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n"],"sourceRoot":""}